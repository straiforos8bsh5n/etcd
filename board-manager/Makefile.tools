NAME=sduino-tools
VERSION?=2017.10.21

# Where to find the tools directory
BASEDIR=../sduino/hardware/sduino

# Ignore all files matching one of these shell patterns:
IGNORE=*~ *bak x build-* *.orig *.rej

# where to put the generated files
ARCHIVEDIR=release
PARTSDIR=parts


#
### No user serviceable part below here. Only generated content. ########
#

# The filename stem of the tools archives to be generated
# (up to the first dash '-')
TOOLS_STEM=$(ARCHIVEDIR)/$(NAME)

# filename for the new tools entries
TOOLS_ENTRY=$(PARTSDIR)/tools-entry-$(NAME)-$(VERSION).txt

# The individual filenames for the different tools archives
TOOLS_LINUX32=release/$(NAME)_linux32-$(VERSION).tar.bz2
TOOLS_LINUX64=release/$(NAME)_linux64-$(VERSION).tar.bz2
TOOLS_WINDOWS=release/$(NAME)_mingw32-$(VERSION).tar.bz2

TOOLS_TARS=$(TOOLS_LINUX32) $(TOOLS_LINUX64) $(TOOLS_WINDOWS)
EXCLUDES=$(addprefix --exclude=, $(IGNORE))
TARFLAGS=$(EXCLUDES) --show-transformed-names --transform

#
# The actual rules
#

# generate one tools entry for all matching tools files
$(TOOLS_ENTRY) : $(TOOLS_TARS)
	./gen_tools_entry.sh "$(TOOLS_STEM)" "$(VERSION)" > $@

$(TOOLS_LINUX32):
	@echo "Generating the tools archive file for Linux 32 bit."
	tar cjf $@ $(EXCLUDES) -C $(BASEDIR) --transform s/linux32/linux/ \
		tools/wrapper tools/linux32

$(TOOLS_LINUX64):
	@echo "Generating the tools archive file for Linux 64 bit."
	tar cjf $@ $(EXCLUDES) -C $(BASEDIR) --transform s/linux64/linux/ \
		tools/wrapper tools/linux64

$(TOOLS_WINDOWS):
	@echo "Generating the tools archive file for Windows."
	tar cjf $@ $(EXCLUDES) -C $(BASEDIR) tools/wrapper tools/win
